<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tour.hotel.mapper.HotelMapper">
    
    <resultMap type="Hotel" id="HotelResult">
        <result property="hotelId"    column="hotel_id"    />
        <result property="name"    column="name"    />
        <result property="description"    column="description"    />
        <result property="price"    column="price"    />
        <result property="location"    column="location"    />
        <result property="imageUrl"    column="image_url"    />
        <result property="checkInTime"    column="check_in_time"    />
        <result property="checkOutTime"    column="check_out_time"    />
        <result property="createdAt"    column="created_at"    />
        <result property="updatedAt"    column="updated_at"    />
    </resultMap>

    <sql id="selectHotelVo">
        select hotel_id, name, description, price, location, image_url, check_in_time, check_out_time, created_at, updated_at from hotel
    </sql>

    <select id="selectHotelList" parameterType="Hotel" resultMap="HotelResult">
        <include refid="selectHotelVo"/>
        <where>  
            <if test="hotelId != null "> and hotel_id = #{hotelId}</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="location != null  and location != ''"> and location = #{location}</if>
            <if test="checkInTime != null "> and check_in_time = #{checkInTime}</if>
            <if test="checkOutTime != null "> and check_out_time = #{checkOutTime}</if>
        </where>
    </select>
    
    <select id="selectHotelByHotelId" parameterType="Long" resultMap="HotelResult">
        <include refid="selectHotelVo"/>
        where hotel_id = #{hotelId}
    </select>

    <insert id="insertHotel" parameterType="Hotel" useGeneratedKeys="true" keyProperty="hotelId">
        insert into hotel
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">name,</if>
            <if test="description != null and description != ''">description,</if>
            <if test="price != null">price,</if>
            <if test="location != null and location != ''">location,</if>
            <if test="imageUrl != null and imageUrl != ''">image_url,</if>
            <if test="checkInTime != null">check_in_time,</if>
            <if test="checkOutTime != null">check_out_time,</if>
            <if test="createdAt != null">created_at,</if>
            <if test="updatedAt != null">updated_at,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">#{name},</if>
            <if test="description != null and description != ''">#{description},</if>
            <if test="price != null">#{price},</if>
            <if test="location != null and location != ''">#{location},</if>
            <if test="imageUrl != null and imageUrl != ''">#{imageUrl},</if>
            <if test="checkInTime != null">#{checkInTime},</if>
            <if test="checkOutTime != null">#{checkOutTime},</if>
            <if test="createdAt != null">#{createdAt},</if>
            <if test="updatedAt != null">#{updatedAt},</if>
         </trim>
    </insert>

    <update id="updateHotel" parameterType="Hotel">
        update hotel
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="description != null and description != ''">description = #{description},</if>
            <if test="price != null">price = #{price},</if>
            <if test="location != null and location != ''">location = #{location},</if>
            <if test="imageUrl != null and imageUrl != ''">image_url = #{imageUrl},</if>
            <if test="checkInTime != null">check_in_time = #{checkInTime},</if>
            <if test="checkOutTime != null">check_out_time = #{checkOutTime},</if>
            <if test="createdAt != null">created_at = #{createdAt},</if>
            <if test="updatedAt != null">updated_at = #{updatedAt},</if>
        </trim>
        where hotel_id = #{hotelId}
    </update>

    <delete id="deleteHotelByHotelId" parameterType="Long">
        delete from hotel where hotel_id = #{hotelId}
    </delete>

    <delete id="deleteHotelByHotelIds" parameterType="String">
        delete from hotel where hotel_id in 
        <foreach item="hotelId" collection="array" open="(" separator="," close=")">
            #{hotelId}
        </foreach>
    </delete>
</mapper>