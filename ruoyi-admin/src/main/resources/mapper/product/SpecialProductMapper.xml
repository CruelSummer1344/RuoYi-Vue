<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.product.mapper.SpecialProductMapper">
    
    <resultMap type="SpecialProduct" id="SpecialProductResult">
        <result property="productId"    column="product_id"    />
        <result property="name"    column="name"    />
        <result property="description"    column="description"    />
        <result property="price"    column="price"    />
        <result property="location"    column="location"    />
        <result property="createdAt"    column="created_at"    />
        <result property="updatedAt"    column="updated_at"    />
    </resultMap>

    <sql id="selectSpecialProductVo">
        select product_id, name, description, price, location, created_at, updated_at from special_product
    </sql>

    <select id="selectSpecialProductList" parameterType="SpecialProduct" resultMap="SpecialProductResult">
        <include refid="selectSpecialProductVo"/>
        <where>  
            <if test="productId != null "> and product_id = #{productId}</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="location != null  and location != ''"> and location = #{location}</if>
        </where>
    </select>
    
    <select id="selectSpecialProductByProductId" parameterType="Long" resultMap="SpecialProductResult">
        <include refid="selectSpecialProductVo"/>
        where product_id = #{productId}
    </select>

    <insert id="insertSpecialProduct" parameterType="SpecialProduct" useGeneratedKeys="true" keyProperty="productId">
        insert into special_product
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">name,</if>
            <if test="description != null">description,</if>
            <if test="price != null">price,</if>
            <if test="location != null and location != ''">location,</if>
            <if test="createdAt != null">created_at,</if>
            <if test="updatedAt != null">updated_at,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">#{name},</if>
            <if test="description != null">#{description},</if>
            <if test="price != null">#{price},</if>
            <if test="location != null and location != ''">#{location},</if>
            <if test="createdAt != null">#{createdAt},</if>
            <if test="updatedAt != null">#{updatedAt},</if>
         </trim>
    </insert>

    <update id="updateSpecialProduct" parameterType="SpecialProduct">
        update special_product
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="description != null">description = #{description},</if>
            <if test="price != null">price = #{price},</if>
            <if test="location != null and location != ''">location = #{location},</if>
            <if test="createdAt != null">created_at = #{createdAt},</if>
            <if test="updatedAt != null">updated_at = #{updatedAt},</if>
        </trim>
        where product_id = #{productId}
    </update>

    <delete id="deleteSpecialProductByProductId" parameterType="Long">
        delete from special_product where product_id = #{productId}
    </delete>

    <delete id="deleteSpecialProductByProductIds" parameterType="String">
        delete from special_product where product_id in 
        <foreach item="productId" collection="array" open="(" separator="," close=")">
            #{productId}
        </foreach>
    </delete>
</mapper>